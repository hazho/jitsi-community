#!/bin/sh
# postinst script for meet-accountmanager
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see https://www.debian.org/doc/debian-policy/ or
# the debian-policy package

CONFIG_DIR=/etc/meet-accountmanager
KEY_FILE="$CONFIG_DIR/key"
USER=meet-accountmanager
STATE_DIR=/var/lib/meet-accountmanager
LOG_DIR=/var/log/meet-accountmanager

case "$1" in
    configure)
        adduser --quiet --system --home "$STATE_DIR" --group $USER
        if [ ! -d "$STATE_DIR" ]; then
            mkdir -p "$STATE_DIR" \
            && echo "Created state dir $STATE_DIR" \
            && chown -R $USER:$USER "$STATE_DIR"
        fi
        if [ ! -d "$LOG_DIR" ]; then
            mkdir -p "$LOG_DIR" \
            && echo "Created log dir $LOG_DIR" \
            && chown -R $USER:$USER "$LOG_DIR"
        fi
        if [ ! -d "$CONFIG_DIR" ]; then
            mkdir -p "$CONFIG_DIR" \
            && echo "Created config dir $CONFIG_DIR"
        fi
        if [ -d "$CONFIG_DIR" -a ! -f "$KEY_FILE" ]; then
            cd $CONFIG_DIR
            (umask 037; /usr/bin/python3 /opt/meet-accountmanager/create_key.py key) \
            && chown root:$USER "$KEY_FILE"
        fi
    ;;


    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# Copied from code automatically generated by dh_installsystemd/12.10ubuntu1
# We do this so that we can install the systemd units to /usr/local/lib/systemd/system
if [ "$1" = "configure" ] || [ "$1" = "abort-upgrade" ] || [ "$1" = "abort-deconfigure" ] || [ "$1" = "abort-remove" ] ; then
	# This will only remove masks created by d-s-h on package removal.
	deb-systemd-helper unmask 'meet-accountmanager.service' >/dev/null || true

	# was-enabled defaults to true, so new installations run enable.
	if deb-systemd-helper --quiet was-enabled 'meet-accountmanager.service'; then
		# Enables the unit on first installation, creates new
		# symlinks on upgrades if the unit file has changed.
		deb-systemd-helper enable 'meet-accountmanager.service' >/dev/null || true
	else
		# Update the statefile to add new symlinks (if any), which need to be
		# cleaned up on purge. Also remove old symlinks.
		deb-systemd-helper update-state 'meet-accountmanager.service' >/dev/null || true
	fi
fi
if [ "$1" = "configure" ] || [ "$1" = "abort-upgrade" ] || [ "$1" = "abort-deconfigure" ] || [ "$1" = "abort-remove" ] ; then
	# This will only remove masks created by d-s-h on package removal.
	deb-systemd-helper unmask 'meet-accountmanager.socket' >/dev/null || true

	# was-enabled defaults to true, so new installations run enable.
	if deb-systemd-helper --quiet was-enabled 'meet-accountmanager.socket'; then
		# Enables the unit on first installation, creates new
		# symlinks on upgrades if the unit file has changed.
		deb-systemd-helper enable 'meet-accountmanager.socket' >/dev/null || true
	else
		# Update the statefile to add new symlinks (if any), which need to be
		# cleaned up on purge. Also remove old symlinks.
		deb-systemd-helper update-state 'meet-accountmanager.socket' >/dev/null || true
	fi
fi
if [ "$1" = "configure" ] || [ "$1" = "abort-upgrade" ] || [ "$1" = "abort-deconfigure" ] || [ "$1" = "abort-remove" ] ; then
	if [ -d /run/systemd/system ]; then
		systemctl --system daemon-reload >/dev/null || true
		if [ -n "$2" ]; then
			_dh_action=restart
		else
			_dh_action=start
		fi
		deb-systemd-invoke $_dh_action 'meet-accountmanager.service' 'meet-accountmanager.socket' >/dev/null || true
	fi
fi

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
